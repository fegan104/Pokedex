





CREATE TABLE pokemonSpecies (
    id INTEGER AS Int NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    colorName TEXT NOT NULL,
    colorUrl TEXT NOT NULL,
    generationName TEXT NOT NULL,
    generationUrl TEXT NOT NULL
);

CREATE TABLE pokemonSpeciesFlavorText (
    pokemonSpeciesId INTEGER AS Int NOT NULL,
    flavorText TEXT NOT NULL,
    versionName TEXT NOT NULL,
    versionUrl TEXT NOT NULL,
    languageName TEXT NOT NULL,
    languageUrl TEXT NOT NULL,
    FOREIGN KEY(pokemonSpeciesId) REFERENCES pokemonSpecies(id)
);

CREATE TABLE pokemonSpeciesDisplayName (
    pokemonSpeciesId INTEGER AS Int NOT NULL,
    displayName TEXT NOT NULL,
    languageName TEXT NOT NULL,
    languageUrl TEXT NOT NULL,
    FOREIGN KEY(pokemonSpeciesId) REFERENCES pokemonSpecies(id)
);

insertPokemonSpecies:
INSERT OR REPLACE INTO pokemonSpecies(
      id,
      name,
      colorName,
      colorUrl,
      generationName,
      generationUrl
)
VALUES (?, ?, ?, ?, ?, ?);

insertFlavorText:
INSERT OR REPLACE INTO pokemonSpeciesFlavorText(
      pokemonSpeciesId,
      flavorText,
      versionName,
      versionUrl,
      languageName,
      languageUrl
)
VALUES (?, ?, ?, ?, ?, ?);

insertDisplayName:
INSERT OR REPLACE INTO pokemonSpeciesDisplayName(
      pokemonSpeciesId,
      displayName,
      languageName,
      languageUrl
)
VALUES (?, ?, ?, ?);

selectSpeciesByPokemonId:
SELECT *
FROM pokemonSpecies AS species
LEFT OUTER JOIN pokemonSpeciesFlavorText AS flavorText
 ON flavorText.pokemonSpeciesId = species.id
 AND species.id = :pokemonId
LEFT OUTER JOIN pokemonSpeciesDisplayName AS displayNames
 ON species.id = displayNames.pokemonSpeciesId
WHERE displayNames.languageName = flavorText.languageName;
